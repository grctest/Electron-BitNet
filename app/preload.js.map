{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNsD;AACtD;AACA,mDAAa;AACb;AACA,6BAA6B,iDAAW;AACxC,8BAA8B,iDAAW;AACzC,6BAA6B,iDAAW;AACxC;AACA;AACA,gCAAgC,iDAAW;AAC3C,6BAA6B,iDAAW;AACxC;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,yCAAyC;AACrE,GAAG;AACH;AACA,0DAA0D;AAC1D,IAAI,iDAAW;AACf,iBAAiB,iDAAW,sCAAsC;AAClE,GAAG;AACH;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,yCAAyC;AACrE,GAAG;AACH;AACA;AACA,yCAAyC,iDAAW;AACpD,4CAA4C,iDAAW;AACvD,kCAAkC,iDAAW;AAC7C;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,gDAAgD;AAC5E,GAAG;AACH;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,8CAA8C;AAC1E,GAAG;AACH;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,iDAAiD;AAC7E,GAAG;AACH;AACA;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW;AAC5B,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,2CAA2C;AACvE,GAAG;AACH;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,gDAAgD;AAC5E,GAAG;AACH,gCAAgC,iDAAW;AAC3C,iCAAiC,iDAAW;AAC5C;AACA;AACA;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,4CAA4C;AACxE,GAAG;AACH;AACA;AACA,IAAI,iDAAW;AACf,iBAAiB,iDAAW,iDAAiD;AAC7E,GAAG;AACH,iCAAiC,iDAAW;AAC5C,kCAAkC,iDAAW;AAC7C,CAAC,E","sources":["webpack://electron-bitnet/external node-commonjs \"electron\"","webpack://electron-bitnet/webpack/bootstrap","webpack://electron-bitnet/webpack/runtime/compat get default export","webpack://electron-bitnet/webpack/runtime/define property getters","webpack://electron-bitnet/webpack/runtime/hasOwnProperty shorthand","webpack://electron-bitnet/webpack/runtime/make namespace object","webpack://electron-bitnet/./src/preload.js"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ipcRenderer, contextBridge } from \"electron\";\r\n\r\ncontextBridge.exposeInMainWorld(\"electron\", {\r\n  // --- General ---\r\n  openURL: async (target) => ipcRenderer.send(\"openURL\", target),\r\n  openFileDialog: async () => ipcRenderer.invoke(\"openFileDialog\"),\r\n  getMaxThreads: async () => ipcRenderer.invoke(\"getMaxThreads\"),\r\n\r\n  // --- Standard Inference (Non-Interactive) ---\r\n  runInference: async (args) => ipcRenderer.send(\"runInference\", args),\r\n  stopInference: async () => ipcRenderer.send(\"stopInference\"), // Used by both modes\r\n  onAiResponse: (func) => {\r\n    const listener = (event, data) => func(data);\r\n    ipcRenderer.on(\"aiResponse\", listener);\r\n    return () => ipcRenderer.removeListener(\"aiResponse\", listener); // Return cleanup function\r\n  },\r\n  onAiError: (func) => {\r\n    const listener = (event, errorMsg) => func(errorMsg); // Pass error message\r\n    ipcRenderer.on(\"aiError\", listener);\r\n    return () => ipcRenderer.removeListener(\"aiError\", listener); // Return cleanup function\r\n  },\r\n  onAiComplete: (func) => {\r\n    const listener = (event) => func();\r\n    ipcRenderer.on(\"aiComplete\", listener);\r\n    return () => ipcRenderer.removeListener(\"aiComplete\", listener); // Return cleanup function\r\n  },\r\n\r\n  // --- Instruction/Conversational Inference (Interactive) ---\r\n  initInstructInference: async (args) => ipcRenderer.send(\"initInstructInference\", args),\r\n  sendInstructPrompt: async (promptText) => ipcRenderer.send(\"sendInstructPrompt\", promptText),\r\n  interjectInference: async () => ipcRenderer.send(\"interjectInference\"), // Added interject\r\n  onAiInstructStarted: (func) => {\r\n    const listener = (event) => func();\r\n    ipcRenderer.on(\"aiInstructStarted\", listener);\r\n    return () => ipcRenderer.removeListener(\"aiInstructStarted\", listener); // Return cleanup function\r\n  },\r\n  onAiResponseChunk: (func) => {\r\n    const listener = (event, chunk) => func(chunk);\r\n    ipcRenderer.on(\"aiResponseChunk\", listener);\r\n    return () => ipcRenderer.removeListener(\"aiResponseChunk\", listener); // Return cleanup function\r\n  },\r\n  onAiInstructComplete: (func) => {\r\n    const listener = (event) => func();\r\n    ipcRenderer.on(\"aiInstructComplete\", listener);\r\n    return () => ipcRenderer.removeListener(\"aiInstructComplete\", listener); // Return cleanup function\r\n  },\r\n  // Ensure onAiError is present and correct\r\n  onAiError: (func) => {\r\n    const listener = (event, errorMsg) => func(errorMsg);\r\n    ipcRenderer.on(\"aiError\", listener);\r\n    return () => ipcRenderer.removeListener(\"aiError\", listener);\r\n  },\r\n\r\n  // --- Benchmark ---\r\n  onBenchmarkLog: (func) => {\r\n    const listener = (event, data) => func(data);\r\n    ipcRenderer.on(\"benchmarkLog\", listener);\r\n    return () => ipcRenderer.removeListener(\"benchmarkLog\", listener); // Return cleanup function\r\n  },\r\n  onBenchmarkComplete: (func) => {\r\n    const listener = (event) => func();\r\n    ipcRenderer.on(\"benchmarkComplete\", listener);\r\n    return () => ipcRenderer.removeListener(\"benchmarkComplete\", listener); // Return cleanup function\r\n  },\r\n  runBenchmark: async (args) => ipcRenderer.send(\"runBenchmark\", args),\r\n  stopBenchmark: async (args) => ipcRenderer.send(\"stopBenchmark\", args),\r\n\r\n  // --- Perplexity ---\r\n  onPerplexityLog: (func) => {\r\n    const listener = (event, data) => func(data);\r\n    ipcRenderer.on(\"perplexityLog\", listener);\r\n    return () => ipcRenderer.removeListener(\"perplexityLog\", listener); // Return cleanup function\r\n  },\r\n  onPerplexityComplete: (func) => {\r\n    const listener = (event) => func();\r\n    ipcRenderer.on(\"perplexityComplete\", listener);\r\n    return () => ipcRenderer.removeListener(\"perplexityComplete\", listener); // Return cleanup function\r\n  },\r\n  runPerplexity: async (args) => ipcRenderer.send(\"runPerplexity\", args),\r\n  stopPerplexity: async (args) => ipcRenderer.send(\"stopPerplexity\", args),\r\n});"],"names":[],"sourceRoot":""}
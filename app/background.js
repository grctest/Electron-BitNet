(()=>{"use strict";var e={n:n=>{var o=n&&n.__esModule?()=>n.default:()=>n;return e.d(o,{a:o}),o},d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n)};const n=require("child_process"),o=require("path");var t=e.n(o);const s=require("os");var l=e.n(s);const r=require("process");var i=e.n(r);const a=require("fs");var c=e.n(a);const p=require("url");var u=e.n(p);const d=require("express");var m=e.n(d);const w=require("electron");let h=null,b=null,g=null;const f=async()=>{h=new w.BrowserWindow({minWidth:480,minHeight:695,maximizable:!0,useContentSize:!0,autoHideMenuBar:!0,webPreferences:{nodeIntegration:!1,contextIsolation:!0,sandbox:!0,preload:t().join(__dirname,"preload.js")},icon:__dirname+"/img/taskbar.png"});const e=m()();let o;o=t().join(i().resourcesPath,"astroDist"),e.use(m().static(o)),e.listen(8080,(()=>{console.log("Express server listening on port 8080")})),function(e){const n=[{label:"View",submenu:[{label:"Send to tray",click(){e.minimize()}},{label:"Reload",role:"reload"},{label:"Dev tools",role:"toggleDevTools"}]}],o=w.Menu.buildFromTemplate(n);w.Menu.setApplicationMenu(o)}(h),h.loadURL("http://localhost:8080/index.html"),h.webContents.setWindowOpenHandler((()=>({action:"deny"}))),b=new w.Tray(t().join(__dirname,"img","tray.png"));const s=w.Menu.buildFromTemplate([{label:"Show App",click:function(){h?.show()}},{label:"Quit",click:function(){b=null,w.app.quit()}}]);b.setToolTip("Electron BitNet"),b.on("right-click",((e,n)=>{b?.popUpContextMenu(s)}));const l=["https://github.com","https://react.dev/","https://astro.build/","https://www.electronjs.org/"];w.ipcMain.on("openURL",((e,n)=>{try{const e=new(u().URL)(n).hostname;l.some((n=>new(u().URL)(n).hostname===e))?w.shell.openExternal(n):console.error(`Rejected opening URL with unsafe domain: ${e}`)}catch(e){console.error(`Failed to open URL: ${e.message}`)}})),w.ipcMain.on("runInference",((e,o)=>{!function(e){let o=t().join("bin","Release","llama-cli.exe");c().existsSync(o)||(o=t().join("bin","llama-cli"));const s=[`"${o}"`,"-m",t().join("models",e.model),"-n",e.n_predict,"-t",e.threads,"-p",`"${e.prompt}"`,"-ngl","0","-c",e.ctx_size,"--temp",e.temperature,"-b","1"];g=(0,n.spawn)(s[0],s.slice(1),{shell:!0}),g.stdout.on("data",(e=>{const n=e.toString();h.webContents.send("aiResponse",n)})),g.on("close",(e=>{h.webContents.send("aiComplete"),g=null}))}(o)})),w.ipcMain.on("stopInference",(e=>{!function(){if(g){console.log("Terminating inference process...");try{g.kill("SIGKILL"),g.stdout.removeAllListeners("data"),g.stderr.removeAllListeners("data"),g=null,console.log("Inference process terminated.")}catch(e){console.error("Failed to terminate inference process:",e)}}else console.log("No inference process to terminate.");h.webContents.send("aiComplete"),g=null}()})),b.on("click",(()=>{h?.setAlwaysOnTop(!0),h?.show(),h?.focus(),h?.setAlwaysOnTop(!1)})),b.on("balloon-click",(()=>{h?.setAlwaysOnTop(!0),h?.show(),h?.focus(),h?.setAlwaysOnTop(!1)}))},y=l().platform();"win32"===y||"linux"===y?(w.app.requestSingleInstanceLock()||w.app.quit(),w.app.whenReady().then((()=>{f()}))):(w.app.whenReady().then((()=>{f()})),w.app.on("window-all-closed",(()=>{"darwin"!==i().platform&&w.app.quit()})),w.app.on("activate",(()=>{null===h&&f()})))})();
//# sourceMappingURL=background.js.map